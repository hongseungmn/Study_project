#리스트 일치 검사를 하는 실습
#리스트가 일치하는 연산을 위해서 반드시 2개의 리스트가 반드시 동일한 자료형이어야 한다.
li1 = [10,20,30]
li2 = [10,20,30]
print(li1 == li2)

# == 연산자는 2개의 리스트가 길이가 서로 다르면 무조건 False이다.
li3 = [4,5,2]
li4 = [4,5,8]
print(li3 > li4)

#아래 리스트는 >,<를 비교할 때 아스키 코드를 가지고 비교한다.
li5 = ["a","b","c"]
li6 = ["a","b","d"]
print(li5 < li6)
print(ord("c"))
print(ord("d"))

#리스트 정렬하기
#정렬하는 2가지 방법
#1번째 방법 : 리스트 객체의 sort() 메소드를 이용하는 방법
#원본 리스트의 값이 변경이 된다.
li = [80,90,100,-70,-50]
li.sort() # 리턴값이 없다.
print(li)
#내장함수로 존재하는 sorted() 메소드를 이용하는 방법
#원본 리스트는 그대로 유지를 하고 정뎔된 리스트를 반환을 해준다.
li = [80,90,100,-70,-50]
c_li = sorted(li)
print(li)
print(c_li)
#리스트 객체의 reverse()는 내림차순이 아니라 리스트 요소를 뒤집는 메서드이다.
li.reverse()
print(li)

#내림차순으로 정렬하는 방법
li.sort(reverse=True)
print(li)

#문자열을 정렬하기
li = ["하와이","폭포","가나","한국"]
li1 = sorted(li,key=str.lower)
print(li1)

#문자열에 토큰을 주어 분리하는 방법(split()메서드 이용)
#문자열을 분리해서 리스트 타입으로 반환을 해준다.
statement = "나는 한국에서 살고 있는 프로그램 교사입니다. 만나서 반갑습니다."
li = statement.split()
print(li)
